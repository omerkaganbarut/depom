const int stepPin = 5;
const int analogPin = A0;
const int butonKayit = 2;
const int butonOynat = 3;

const int toplamPulse = 2000;
int a0Veri[toplamPulse + 1];  // 2001 elemanlı

int pulseIndex = 0;

bool kayitModu = false;
bool oynatmaModu = false;

unsigned long oncekiZaman = 0;
unsigned long highBaslangicZamani = 0;
bool pulseHighAktif = false;

int a0Min = 1023;
int a0Max = 0;

void setup() {
  pinMode(stepPin, OUTPUT);
  pinMode(butonKayit, INPUT_PULLUP);
  pinMode(butonOynat, INPUT_PULLUP);
  Serial.begin(9600);
}

void loop() {
  // MOD 1: Kayıt
  if (!digitalRead(butonKayit) && !kayitModu && !oynatmaModu) {
    Serial.println("Kayıt modu başlatılıyor...");
    kayitModu = true;
    pulseIndex = 0;
    a0Veri[0] = analogRead(analogPin);  // İlk değeri hemen al
    a0Min = a0Veri[0];
    a0Max = a0Veri[0];
    oncekiZaman = millis();
  }

  if (kayitModu) {
    unsigned long simdi = millis();

    if (!pulseHighAktif && simdi - oncekiZaman >= 10) {  // 100 Hz
      digitalWrite(stepPin, HIGH);
      highBaslangicZamani = simdi;
      pulseHighAktif = true;
    }

    if (pulseHighAktif && simdi - highBaslangicZamani >= 1) {
      digitalWrite(stepPin, LOW);
      pulseHighAktif = false;
      oncekiZaman = simdi;

      pulseIndex++;
      int deger = analogRead(analogPin);
      a0Veri[pulseIndex] = deger;

      if (deger < a0Min) a0Min = deger;
      if (deger > a0Max) a0Max = deger;

      if (pulseIndex >= toplamPulse) {
        kayitModu = false;
        Serial.println("Kayıt bitti.");
      }
    }
  }

  // MOD 2: Oynatma (frekans a0'lara göre hesaplanıyor)
  if (!digitalRead(butonOynat) && !oynatmaModu && !kayitModu) {
    Serial.println("Oynatma modu başlatılıyor...");
    oynatmaModu = true;
    pulseIndex = 0;
    oncekiZaman = millis();
  }

  if (oynatmaModu) {
    unsigned long simdi = millis();

    // anlık map ve bölme hesaplama:
    int a0Deger = a0Veri[pulseIndex];
    int hedefFrekans = map(a0Deger, a0Min, a0Max, 100, 200);  // Hz
    int pulseSuresi = 1000 / hedefFrekans;  // ms
    int lowSuresi = pulseSuresi - 1;

    if (!pulseHighAktif && simdi - oncekiZaman >= lowSuresi) {
      digitalWrite(stepPin, HIGH);
      highBaslangicZamani = simdi;
      pulseHighAktif = true;
    }

    if (pulseHighAktif && simdi - highBaslangicZamani >= 1) {
      digitalWrite(stepPin, LOW);
      pulseHighAktif = false;
      oncekiZaman = simdi;

      pulseIndex++;
      if (pulseIndex >= toplamPulse) {
        oynatmaModu = false;
        Serial.println("Oynatma tamamlandı.");
      }
    }
  }
}
